RDBMS 관계형데이터베이스 관리 시스템
관계형 모델을 기반으로 하는 DB관리시스템

SQLite : 무료 RDBMS 제공. 

오라클: 자바만든회사. 얘도 RDBMS 제공한다.

SQL이라는 언어로 이러한 프로그램들을 조작한다.

SQLite 제외 나머지는 매우 큰 프로그램.
서버를 독립적으로 점유하고 작동한다.

SQLite는 파일 하나로만 존재하고, 컨씨컨브이가 먹는 유일한 프로그램이다.
서버가 아닌 응용 프로그램에 넣어 사용한다.
핸드폰에도 사용된다~~

데이터베이스에서
각 컬럼의 형식을 정해놓아야 한다.
이름과 속성을 정해놓고 데이터를 받아야한다.

스키마: 데이터베이스의 구조와 제약 조건에 관한 전반적인 명세를 기록한 것.

id(INT)|feeling(STRING)|timestamp(DATETIME)


id(INT)| menu1 | menu2 | menu3 | menu4
1	쌀국수	고기	빵	밥

맨 위 헤더를 스키마라고 부른다.
스키마를 고민하고 정하는 작업을 데이터 모델링이라고 말한다.
스키마 확정되는 순간 테이블이 생기고,
테이블 한 줄 한 줄을  record라고 부른다.

아이디는 레코드에 고유값을 주기 위해 필요하다.
입력 전에 아이디는 존재하지 않는다.
레코드를 기록한 이후에 아이디를 자동할당하도록 만드는 것이 포인트!


sqlite3이라고 클라우드9 창에 치면 바로 시작된다.

끝에 꼭 ; 찍어라~~

CREATE TABLE menus (
   ...> id INTEGER, menu1 TEXT, menu2 TEXT
   ...> );
menus는 테이블명, 
괄호 안 내용은 ,를 기준으로 나누어지며
열 이름과 자료형을 띄어쓰기로 구분해 작성한다.


.으로 시작되는 명령어들은 sqLITE 전용명령어라서 세미콜론 안 써도 된다.
대문자도 아니다.

.tables 하면 menus라고 생성된 테이블명 알려줌

 INSERT INTO menus (id, menu1, menu2)
   ...> VALUES(1, 'Pho', 'Pork');    
이렇게 하면 레코드 한 줄 쓰는 것.

SELECT id FROM menus WHERE id=1;
>> 1
SELECT menu1 FROM menus WHERE id=1; 
>> Pho

SELECT menu1, menu2 FROM menus WHERE id=1; 
>> Pho|Pork

SELECT * FROM menus WHERE id=1;
>> 1|Pho|Pork

SELECT * FROM menus ;
이건 테이블 통째로 전부 출력

스트링 안에서 중간에 엔터치면 그대로 들어간다 엉엉



CREATE TABLE <table_name> {
	<col1> DATATYPE,
	<col2> DATATYPE,
	...
	);

INSERT INTO <tablename> (<col1>, <col2>, ... )
VALUES (<data1>, <data2>,... );

SELECT * FROM <table_name>

.headers on
.mode column
이렇게 하면 헤더달아주고 열도 띄어준다.


CREATE TABLE computers (
id INT PRIMARY KEY,
year INT,
company TEXT,
model TEXT
);
INSERT INTO computers (year, company, model)
VALUES
(2018, 'samsung', 'Series9'),
(2019, 'LG', 'Gram17');

.read create_table.sql 
.read insert_record.sql 

파일 실행.
.mode csv
.import users.csv users
users.csv 내용을 users 테이블에 넣겠다.


.schema users
해당 테이블의 스키마 보여준다.
csv 임포트하면 스키마 다 텍스트로 들어오니까
지정해주고 임포트해야한다!

ALTER TABLE users RENAME TO userssssss
이름바꾸기

.schema : 모든 테이블 스키마 다나옴
.schema users: users테이블꺼만




<데이터조작 관련>
INSERT INTO <table_name> (<col_name_1>,
<col_name2>, <col_name3>...)

VALUES
(<value1>, <value2>, <value3> ... ),
(<value1>, <value2>, <value3> ... ),
(<value1>, <value2>, <value3> ... ),
...
(<value1>, <value2>, <value3> ... );


<데이터 조회>

테이블에서 특정 컬럼만 조회
SELECT <col_1>, <col_2> ... from <table_name>;

특정 조건으로 전체 컬럼 조회
SELECT * from <table_name> WHERE [condition];

.read <file.sql> : 해당 sql스크립트 실행.
위치가 나와 같아야 실행된다!

.import <file.name> <table.name> 이 파일을 이 테이블로 들여온다.

INSERT INTO userss (first_name, last_name, age, country, phone, balance)
VALUES (); 
이거도 들어가긴 감. 그런데 빈 데이터가 들어가면 안 되니까!

데이터 수정
UPDATE <table_name>
SET <col_1> = <val_1>, <col_2> = <val_2>, ...
WHERE [condition]; #보통 아이디로 선택

삭제
DELETE FROM <table_name>
WHERE [condition];


 CRUD 오퍼레이션. (Create Retrieve Update Delete)

.schema : 스키마 전체 출력 + from <table_name>


1. 문제 답
SELECT * FROM users WHERE age >= 30;


EXpression


패턴!!
2%: 2로 시작하는 값
%2: 2로 끝나는 값
%2%: 2가 들어가는 값.

_2: 두 번째 글자가 2인 값
1____: 1로 시작하며 뒤에 4자리인 값
_2%: 두번째 글자가 2이고, 뒤에 어떤 내용이든 붙어도 상관없음.
2_%_%: 2로 시작하는데 최소 세자리인 값.

